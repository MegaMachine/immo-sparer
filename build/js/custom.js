function n(){var e=$("header.header").outerHeight();$("section.webinar-info").css("min-height","calc(100vh - "+e+"px)")}function o(){var e,t,a=$(".webinar-info h2"),n=a.css("marginBottom");$(a[0]).outerHeight()<=$(a[1]).outerHeight()?($(a[0]).css("marginBottom",n),e=$(a[0]).outerHeight(),t=$(a[1]).outerHeight()-e,$(a[0]).css("marginBottom",parseFloat($(a[0]).css("marginBottom"))+t+"px")):($(a[1]).css("marginBottom",n),e=$(a[1]).outerHeight(),t=$(a[0]).outerHeight()-e,$(a[1]).css("marginBottom",parseFloat($(a[1]).css("marginBottom"))+t+"px"))}function i(){991<=window.outerWidth&&setTimeout(function(){var e=$("body").outerWidth(),t=$(".seminare-and-map .map").offset().left;$(".seminare-and-map .map .map-wrap").css({width:e-t+"px"}),console.log(t)},111)}function l(){var e=parseFloat($(".new-properties__item__text p").css("lineHeight")),t=$(".new-properties__item__text h3"),a=$(".new-properties__item__location div"),n=0,o=0;a.removeAttr("style"),t.removeAttr("style"),a.map(function(){$(this).outerHeight()>=n&&(n=$(this).outerHeight())}),t.map(function(){$(this).height()>=o&&(o=$(this).height())}),a.css("height",n+"px"),t.css("height",o+"px"),$(".new-properties__item__text p").css("height",2*e+"px")}$(function(){!function(){for(var e=$(".header__bottom__nav ul li a"),t=0;t<e.length;t++){var a=document.createElement("li"),n=$(e[t]).clone();$(n).removeClass("dropdown-item"),$(n).appendTo(a),$(a).appendTo(".header__bottom__nav__mobile ul")}$(".header__mid__contacts__phones").clone().appendTo(".header__bottom__nav__mobile"),$(".header__top .log-or-reg").clone().appendTo(".header__bottom__nav__mobile")}(),e(),setTimeout(function(){var e,t,a;n(),o(),i(),l(),e=$(".object-fit-simulation"),t=e.find("img"),a=t.attr("src"),t.css("display","none"),e.css({background:"url("+a+") no-repeat center / cover"})},111),$(window).scroll(function(){}),$(window).resize(function(){n(),o(),l(),i()}),$(".menu-button").click(function(){$(this).toggleClass("is-active"),$(".header__bottom__nav__mobile").toggleClass("active")}),$("#show-agents").click(function(){e()})});var a=!1;function e(){var e=$(".agents .row>div");if(a)e.fadeIn(),a=!a;else{for(var t=2;t<e.length;t++)$(e[t]).fadeOut();a=!a}console.log(e)}window.initMap=function(){var e={lat:r.lat,lng:r.log};s=new google.maps.Map(document.getElementById("map"),{zoom:7,center:e,mapTypeId:r.type}),f(p)};var s,r,c,p,d,u,m,h=[],t={states:[],cities:[],eventsType:[]};function g(e,t,a){b(null),h=[];var n={state_id:e?[Number(e)]:null,city_id:t?[Number(t)]:null,event_type_id:a?[Number(a)]:null},o=_.pickBy(n,_.identity);p=_.filter(c.events_dict,o),v(),f(p),b(s),console.log(p.length,c.events_dict.length),p.length!==c.events_dict.length?(s.setCenter({lat:parseFloat(p[0].latitude),lng:parseFloat(p[0].longitude)}),s.setZoom(14),console.log("+")):(s.setCenter({lat:r.lat,lng:r.log}),s.setZoom(7),console.log("-"))}function v(){var s,r=$(".seminare__search__list ul");r.html(""),p.map(function(e){s=document.createElement("li");var t=e.street?e.street:"",a=e.zip?e.zip:"",n=e.city_id[1]?e.city_id[1]:"",o=String(e.date_begin).substr(0,9).replace("-",".").replace("-",".");o=(o=(o=o.split(".")).reverse()).join(".");var i=String(e.date_begin).replace(":",".").replace(":",".").substr(11,15),l=String(e.date_end).replace(":",".").replace(":",".").substr(11,15);i=i.substr(0,5),l=l.substr(0,5),$(s).html("<h3>"+e.name+"</h3><div><p>"+t+" "+a+" "+n+'</p><a class="button blue" href="event/'+e.id+'"><span>Platz reservieren</span></a></div><span>Am '+o+" von "+i+" bis "+l+" Uhr</span>"),$(s).appendTo(r)})}function f(e){e.map(function(e){var t=e.street?e.street+" ,":"",a=e.city_id[1]?e.city_id[1]+" ,":"",n=e.country_id[1]?e.country_id[1]:"",o=e.zip?e.zip:"",i='<div class="marker-info"><div class="marker-info-title"><span></span><h2>'+e.city_id[1]+'</h2></div><div class="marker-info-content"><a href="tel:123" class="phone">123123123123</a><p class="address"><span>'+t+"</span><span>"+o+" "+a+"</span> <span>"+n+"</span></p></div> </div>";!function(e,t){new google.maps.LatLngBounds;var a=new google.maps.LatLng(e.lat,e.lng),n=new google.maps.Marker({center:a,position:a,map:s});n.setVisible(!1),new google.maps.InfoWindow({content:t}).open(s,n),h.push(n)}({lat:e.latitude,lng:e.longitude},i)})}function b(e){for(var t=0;t<h.length;t++)h[t].setMap(e)}$(document).ready(function(){r={lat:parseFloat($("#latitude").val())||50.9913249,log:parseFloat($("#longitude").val())||9.4721966,type:$("#template_type").val()||"terrain"},$(window).resize(function(){d.select2({placeholder:"Select a state",allowClear:!0}),u.select2({placeholder:"Select a city",allowClear:!0}),m.select2({placeholder:"Select a event type",allowClear:!0})}),d=$(".seminare__search__filter__state select"),u=$(".seminare__search__filter__city select"),m=$(".seminare__search__filter__type select"),d.select2({placeholder:"Select a state",allowClear:!0}),u.select2({placeholder:"Select a city",allowClear:!0}),m.select2({placeholder:"Select a event type",allowClear:!0}),$(".select2-selection__clear").click(function(){g(d.val(),u.val(),m.val())}),$(".seminare__search__filter select").change(function(){g(d.val(),u.val(),m.val())}),$(".seminare__search__filter__city select").change(function(){!d.val()&&u.val()?d.prop("disabled",!0):d.prop("disabled",!1),g(d.val(),u.val(),m.val())}),$(".seminare__search__filter__state select").change(function(){$(this).val()?(t.cities=[],t.cities=_.filter(c.cities_dict,{state_id:Number($(this).val())}),u.html("<option></option>"),t.cities.map(function(e){var t=new Option(e.name,e.id);u.append(t)})):(t.cities=[],t.cities=c.cities_dict,u.html("<option></option>"),t.cities.map(function(e){var t=new Option(e.name,e.id);u.append(t)})),g(d.val(),u.val(),m.val())}),$(document).on("click",".marker-info",function(){$(this).hasClass("active")?$(this).removeClass("active"):($(".marker-info").removeClass("active"),$(this).addClass("active"))}),$.when($.ajax({type:"GET",url:"http://localhost:3000/json/data.json",dataType:"json",async:!1,success:function(e){p=(c=e).events_dict,console.log("good: ",c)},error:function(e){console.log("error: ",e)}})).done(function(){!function(){var e=document.createElement("script");e.async=!0,e.defer=!0,e.type="text/javascript",e.src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDfcs6mV0XqyFqpo34GSATKLtePqTgc0WI&callback=initMap";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t),document.body.appendChild(e)}(),t.states=c.state_dict,t.cities=c.cities_dict,t.eventsType=c.event_categories,t.states.map(function(e){var t=new Option(e.name,e.id);d.append(t)}),t.cities.map(function(e){var t=new Option(e.name,e.id);u.append(t)}),t.eventsType.map(function(e){var t=new Option(e.name,e.id);m.append(t)}),v()})});var y=document.getElementById("myChartOne").getContext("2d"),w=document.getElementById("myChartTwo").getContext("2d");Chart.plugins.unregister(ChartDataLabels),Chart.defaults.global.defaultFontColor="#292929",Chart.defaults.global.defaultFontSize=14,Chart.defaults.global.defaultFontFamily="Poppins-SemiBold",$(window).resize(function(){window.outerWidth<=991?(Chart.defaults.global.defaultFontSize=12,C.layout.padding.left=10):(Chart.defaults.global.defaultFontSize=14,C.layout.padding.left=20),new Chart(y,{type:"bar",data:k,plugins:[ChartDataLabels],options:C})});var C={display:!0,layout:{padding:{left:20}},plugins:{datalabels:{color:"#292929",anchor:"end",align:"top",formatter:function(e,t){return e+" €"}}},scales:{yAxes:[{ticks:{beginAtZero:!0,callback:function(e,t,a){return e+" €"}}}]}},k={labels:["1","5","10","15","20","25"],datasets:[{label:"# of Votes",data:[1e5,19,3,5,2,3],backgroundColor:"#44acd7",borderColor:"#44acd7",borderWidth:1}]};new Chart(y,{type:"bar",data:k,plugins:[ChartDataLabels],options:C}),new Chart(w,{type:"bar",data:{labels:["1","5","10","15","20","25"],datasets:[{label:"# of Votes",data:[124124,1231234,575675,8968678,1235,4123556],backgroundColor:"#44acd7",borderColor:"#44acd7",borderWidth:1}]},plugins:[ChartDataLabels],options:C});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
