function n(){var e=$("header.header").outerHeight();$("section.webinar-info").css("min-height","calc(100vh - "+e+"px)")}function o(){var e,t,a=$(".webinar-info h2"),n=a.css("marginBottom");$(a[0]).outerHeight()<=$(a[1]).outerHeight()?($(a[0]).css("marginBottom",n),e=$(a[0]).outerHeight(),t=$(a[1]).outerHeight()-e,$(a[0]).css("marginBottom",parseFloat($(a[0]).css("marginBottom"))+t+"px")):($(a[1]).css("marginBottom",n),e=$(a[1]).outerHeight(),t=$(a[0]).outerHeight()-e,$(a[1]).css("marginBottom",parseFloat($(a[1]).css("marginBottom"))+t+"px"))}function i(){991<=window.outerWidth&&setTimeout(function(){var e=$("body").outerWidth(),t=$(".seminare-and-map .map").offset().left;$(".seminare-and-map .map .map-wrap").css({width:e-t+"px"}),console.log(t)},111)}function s(){var e=parseFloat($(".new-properties__item__text p").css("lineHeight")),t=$(".new-properties__item__text h3"),a=$(".new-properties__item__location div"),n=0,o=0;a.removeAttr("style"),t.removeAttr("style"),a.map(function(){$(this).outerHeight()>=n&&(n=$(this).outerHeight())}),t.map(function(){$(this).height()>=o&&(o=$(this).height())}),a.css("height",n+"px"),t.css("height",o+"px"),$(".new-properties__item__text p").css("height",2*e+"px")}$(function(){!function(){for(var e=$(".header__bottom__nav ul li a"),t=0;t<e.length;t++){var a=document.createElement("li"),n=$(e[t]).clone();$(n).removeClass("dropdown-item"),$(n).appendTo(a),$(a).appendTo(".header__bottom__nav__mobile ul")}$(".header__mid__contacts__phones").clone().appendTo(".header__bottom__nav__mobile"),$(".header__top .log-or-reg").clone().appendTo(".header__bottom__nav__mobile")}(),e(),setTimeout(function(){var e,t,a;n(),o(),i(),s(),e=$(".object-fit-simulation"),t=e.find("img"),a=t.attr("src"),t.css("display","none"),e.css({background:"url("+a+") no-repeat center / cover"})},111),$(window).scroll(function(){}),$(window).resize(function(){n(),o(),s(),i()}),$(".menu-button").click(function(){$(this).toggleClass("is-active"),$(".header__bottom__nav__mobile").toggleClass("active")}),$("#show-agents").click(function(){e()})});var a=!1;function e(){var e=$(".agents .row>div");if(a)e.fadeIn(),a=!a;else{for(var t=2;t<e.length;t++)$(e[t]).fadeOut();a=!a}console.log(e)}window.initMap=function(){var e={lat:c.lat,lng:c.log};r=new google.maps.Map(document.getElementById("map"),{zoom:7,center:e,mapTypeId:c.type}),b(d)};var r,c,l,d,p,h,u,m,g=[],t={states:[],cities:[],eventsType:[]};function v(e,t,a){y(null),g=[];var n={state_id:e?[Number(e)]:null,city_id:t?[Number(t)]:null,event_type_id:a?[Number(a)]:null},o=_.pickBy(n,_.identity);d=_.filter(l.events_dict,o),f(),b(d),y(r),console.log(d.length,l.events_dict.length),d.length!==l.events_dict.length?(r.setCenter({lat:parseFloat(d[0].latitude),lng:parseFloat(d[0].longitude)}),r.setZoom(14),console.log("+")):(r.setCenter({lat:c.lat,lng:c.log}),r.setZoom(7),console.log("-"))}function f(){var r,c=$(".seminare__search__list ul");c.html(""),d.map(function(e){r=document.createElement("li");var t=e.street?e.street:"",a=e.zip?e.zip:"",n=e.city_id[1]?e.city_id[1]:"",o=String(e.date_begin).substr(0,9).replace("-",".").replace("-",".");o=(o=(o=o.split(".")).reverse()).join(".");var i=String(e.date_begin).replace(":",".").replace(":",".").substr(11,15),s=String(e.date_end).replace(":",".").replace(":",".").substr(11,15);i=i.substr(0,5),s=s.substr(0,5),$(r).html("<h3>"+e.name+"</h3><div><p>"+t+" "+a+" "+n+'</p><a class="button blue" href="event/'+e.id+'"><span>Platz reservieren</span></a></div><span>Am '+o+" von "+i+" bis "+s+" Uhr</span>"),$(r).appendTo(c)})}function b(e){console.log(e),e.map(function(e){var t=e.street?e.street+" ,":"",a=e.city_id[1]?e.city_id[1]+" ,":"",n=e.country_id[1]?e.country_id[1]:"",o=e.zip?e.zip:"",i='<div class="marker-info"><div class="marker-info-title"><span></span><h2>'+e.city_id[1]+'</h2></div><div class="marker-info-content"><a href="tel:123" class="phone">123123123123</a><p class="address"><span>'+t+"</span><span>"+o+" "+a+"</span> <span>"+n+"</span></p></div> </div>";!function(e,t){new google.maps.LatLngBounds;var a=new google.maps.LatLng(e.lat,e.lng),n=new google.maps.Marker({center:a,position:a,map:r});n.setVisible(!1),new google.maps.InfoWindow({content:t}).open(r,n),g.push(n)}({lat:e.latitude,lng:e.longitude},i)})}function y(e){for(var t=0;t<g.length;t++)g[t].setMap(e)}$(document).ready(function(){c={lat:parseFloat($("#latitude").val())||50.9913249,log:parseFloat($("#longitude").val())||9.4721966,type:$("#template_type").val()||"terrain"},$(window).resize(function(){}),p=$(".seminare__search__filter__state select"),h=$(".seminare__search__filter__city select"),u=$(".seminare__search__filter__type select"),p.select2({width:"resolve",theme:"classic",placeholder:"Select a state",allowClear:!0}),h.select2({width:"resolve",theme:"classic",placeholder:"Select a city",allowClear:!0}),u.select2({width:"resolve",theme:"classic",placeholder:"Select a event type",allowClear:!0}),$(".select2-selection__clear").click(function(){v(p.val(),h.val(),u.val())}),$(".seminare__search__filter select").change(function(){v(p.val(),h.val(),u.val())}),$(".seminare__search__filter__city select").change(function(){!p.val()&&h.val()?p.prop("disabled",!0):p.prop("disabled",!1),v(p.val(),h.val(),u.val())}),$(".seminare__search__filter__state select").change(function(){$(this).val()?(t.cities=[],t.cities=_.filter(l.cities_dict,{state_id:Number($(this).val())}),h.html("<option></option>"),t.cities.map(function(e){var t=new Option(e.name,e.id);h.append(t)})):(t.cities=[],t.cities=l.cities_dict,h.html("<option></option>"),t.cities.map(function(e){var t=new Option(e.name,e.id);h.append(t)})),v(p.val(),h.val(),u.val())}),$(document).on("click",".marker-info",function(){$(this).hasClass("active")?$(this).removeClass("active"):($(".marker-info").removeClass("active"),$(this).addClass("active"))}),$.when($.ajax({type:"GET",url:"http://localhost:3000/json/data.json",dataType:"json",async:!1,success:function(e){d=(l=e).events_dict,console.log("good: ",e)},error:function(e){console.log("error: ",e)}})).done(function(){!function(){var e=document.createElement("script");e.async=!0,e.defer=!0,e.type="text/javascript",e.src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDfcs6mV0XqyFqpo34GSATKLtePqTgc0WI&callback=initMap";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t),document.body.appendChild(e)}(),t.states=l.state_dict,t.cities=l.cities_dict,t.eventsType=l.event_categories,t.states.map(function(e){var t=new Option(e.name,e.id);p.append(t)}),t.cities.map(function(e){var t=new Option(e.name,e.id);h.append(t)}),t.eventsType.map(function(e){var t=new Option(e.name,e.id);u.append(t)}),f()})}),Chart.plugins.unregister(ChartDataLabels);var w="http://localhost:3000/json/";function C(e,t){return $.ajax({type:"GET",url:e+t+".json",dataType:"json",async:!1,success:function(e){m=e,console.log(m)},error:function(e){console.log("error: ",e)}})}function k(e,t,a){var n,o,i,s,r,c,l;document.querySelector(".charts__block__item.one .charts__block__item__chart").innerHTML="",document.querySelector(".charts__block__item.two .charts__block__item__chart").innerHTML="",c=document.createElement("canvas"),l=document.createElement("canvas"),c.id="myChartOne",l.id="myChartTwo",c.height="250",l.height="250",document.querySelector(".charts__block__item.one .charts__block__item__chart").appendChild(c),document.querySelector(".charts__block__item.two .charts__block__item__chart").appendChild(l),n=document.getElementById("myChartOne").getContext("2d"),o=document.getElementById("myChartTwo").getContext("2d"),r={display:!0,layout:{padding:{left:20,top:30}},legend:{display:!1},plugins:{datalabels:{color:"#292929",anchor:"end",align:"top",formatter:function(e,t){return e+" €"}}},scales:{yAxes:[{ticks:{beginAtZero:!0,callback:function(e,t,a){return e+" €"}}}]}},Chart.defaults.global.defaultFontColor="#292929",Chart.defaults.global.defaultFontSize=14,Chart.defaults.global.defaultFontFamily="Poppins-SemiBold",i={labels:e||m.label,datasets:[{data:t||m.chart[0].data1,backgroundColor:"#44acd7",borderColor:"#44acd7",borderWidth:1}]},s={labels:e||m.label,datasets:[{data:a||m.chart[0].data2,backgroundColor:"#44acd7",borderColor:"#44acd7",borderWidth:1}]},new Chart(n,{type:"bar",data:i,plugins:[ChartDataLabels],options:r}),new Chart(o,{type:"bar",data:s,plugins:[ChartDataLabels],options:r})}$(document).ready(function(){$.when(C(w,"1")).done(function(){k(m.label,m.chart[0].data1,m.chart[0].data2)}),$(window).resize(function(){window.outerWidth});for(var e=$(".charts__buttons"),t=0;t<m.percents.length;t++){var a=null;(a=document.createElement("button")).value=m.percents[t],a.classList.add("button"),a.classList.add("red"),$(a).html("<span>"+m.percents[t]+"%</span>"),$(a).appendTo(e)}$(".charts__buttons button").click(function(){$.when(C(w,$(this).val())).done(function(){k(m.label,m.chart[0].data1,m.chart[0].data2)})}),$(".charts__block__item.one .charts__block__item__input input").change(function(){$.when(C(w+"chart-input-one",$(this).val())).done(function(){k(m.label,m.chart[0].data1,m.chart[0].data2)})}),$(".charts__block__item.two .charts__block__item__input input").change(function(){$.when(C(w+"chart-input-two",$(this).val())).done(function(){k(m.label,m.chart[0].data1,m.chart[0].data2)})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
